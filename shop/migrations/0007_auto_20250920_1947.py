# Generated by Django 5.2.6 on 2025-09-20 14:47

from django.db import migrations


def create_order_table_if_not_exists(apps, schema_editor):
    """
    Create the complete Order table structure if it doesn't exist or add missing columns
    """
    with schema_editor.connection.cursor() as cursor:
        # Check if shop_order table exists
        cursor.execute("""
            SELECT EXISTS (
                SELECT FROM information_schema.tables 
                WHERE table_name = 'shop_order'
            );
        """)
        
        table_exists = cursor.fetchone()[0]
        
        if not table_exists:
            # Create the entire table if it doesn't exist
            cursor.execute("""
                CREATE TABLE shop_order (
                    id SERIAL PRIMARY KEY,
                    customer_name VARCHAR(255) NOT NULL,
                    customer_email VARCHAR(254) NOT NULL,
                    customer_phone VARCHAR(50) NOT NULL,
                    customer_address TEXT NOT NULL,
                    shipping_phone VARCHAR(50) NOT NULL DEFAULT '',
                    shipping_address TEXT NOT NULL DEFAULT '',
                    status VARCHAR(20) NOT NULL DEFAULT 'pending',
                    created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
                    dropshipper_shop_name VARCHAR(255),
                    dropshipper_shop_logo VARCHAR(100),
                    dropshipper_shop_id INTEGER REFERENCES shop_shop(id) ON DELETE SET NULL
                );
            """)
            
            # Create OrderItem table if it doesn't exist
            cursor.execute("""
                CREATE TABLE IF NOT EXISTS shop_orderitem (
                    id SERIAL PRIMARY KEY,
                    product_title VARCHAR(255) NOT NULL,
                    quantity INTEGER NOT NULL CHECK (quantity >= 0),
                    price DECIMAL(10, 2) NOT NULL,
                    order_id INTEGER NOT NULL REFERENCES shop_order(id) ON DELETE CASCADE,
                    product_id INTEGER NOT NULL REFERENCES shop_product(id) ON DELETE PROTECT,
                    vendor_id INTEGER NOT NULL REFERENCES accounts_user(id) ON DELETE PROTECT
                );
            """)
        else:
            # Table exists, add missing columns if they don't exist
            columns_to_add = [
                ("customer_name", "VARCHAR(255) NOT NULL DEFAULT ''"),
                ("customer_email", "VARCHAR(254) NOT NULL DEFAULT ''"),
                ("customer_phone", "VARCHAR(50) NOT NULL DEFAULT ''"),
                ("customer_address", "TEXT NOT NULL DEFAULT ''"),
                ("shipping_phone", "VARCHAR(50) NOT NULL DEFAULT ''"),
                ("shipping_address", "TEXT NOT NULL DEFAULT ''"),
                ("status", "VARCHAR(20) NOT NULL DEFAULT 'pending'"),
                ("created_at", "TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW()"),
                ("dropshipper_shop_name", "VARCHAR(255)"),
                ("dropshipper_shop_logo", "VARCHAR(100)"),
            ]
            
            for column_name, column_def in columns_to_add:
                # Check if column exists
                cursor.execute("""
                    SELECT EXISTS (
                        SELECT FROM information_schema.columns 
                        WHERE table_name = 'shop_order' AND column_name = %s
                    );
                """, [column_name])
                
                column_exists = cursor.fetchone()[0]
                if not column_exists:
                    cursor.execute(f"ALTER TABLE shop_order ADD COLUMN {column_name} {column_def}")


def reverse_order_table_creation(apps, schema_editor):
    """
    Reverse migration - drop the Order table
    """
    with schema_editor.connection.cursor() as cursor:
        cursor.execute("DROP TABLE IF EXISTS shop_orderitem CASCADE")
        cursor.execute("DROP TABLE IF EXISTS shop_order CASCADE")


class Migration(migrations.Migration):

    dependencies = [
        ('shop', '0006_auto_20250920_1941'),
    ]

    operations = [
        migrations.RunPython(create_order_table_if_not_exists, reverse_order_table_creation),
    ]
