# Generated by Django 5.2.6 on 2025-09-20 15:00

from django.db import migrations


def fix_orderitem_table(apps, schema_editor):
    """
    Add missing columns to shop_orderitem table to match Django model
    """
    with schema_editor.connection.cursor() as cursor:
        # Check and add product_title column
        cursor.execute("""
            SELECT EXISTS (
                SELECT FROM information_schema.columns 
                WHERE table_name = 'shop_orderitem' AND column_name = 'product_title'
            );
        """)
        
        if not cursor.fetchone()[0]:
            cursor.execute("""
                ALTER TABLE shop_orderitem 
                ADD COLUMN product_title VARCHAR(255) NOT NULL DEFAULT '';
            """)
            print("Added product_title column to shop_orderitem")
        
        # Check and add vendor_id column
        cursor.execute("""
            SELECT EXISTS (
                SELECT FROM information_schema.columns 
                WHERE table_name = 'shop_orderitem' AND column_name = 'vendor_id'
            );
        """)
        
        if not cursor.fetchone()[0]:
            cursor.execute("""
                ALTER TABLE shop_orderitem 
                ADD COLUMN vendor_id INTEGER REFERENCES accounts_user(id) ON DELETE RESTRICT;
            """)
            print("Added vendor_id column to shop_orderitem")
        
        # Update existing records with proper data if any exist
        cursor.execute("SELECT COUNT(*) FROM shop_orderitem WHERE product_title = '' OR vendor_id IS NULL")
        needs_update = cursor.fetchone()[0]
        
        if needs_update > 0:
            # Update product_title and vendor_id from related product
            cursor.execute("""
                UPDATE shop_orderitem 
                SET 
                    product_title = COALESCE(shop_product.title, 'Unknown Product'),
                    vendor_id = COALESCE(shop_product.vendor_id, 1)
                FROM shop_product 
                WHERE shop_orderitem.product_id = shop_product.id
                AND (shop_orderitem.product_title = '' OR shop_orderitem.vendor_id IS NULL)
            """)
            print(f"Updated {needs_update} existing order items with product data")


def reverse_orderitem_fix(apps, schema_editor):
    """
    Remove the added columns
    """
    with schema_editor.connection.cursor() as cursor:
        cursor.execute("ALTER TABLE shop_orderitem DROP COLUMN IF EXISTS product_title")
        cursor.execute("ALTER TABLE shop_orderitem DROP COLUMN IF EXISTS vendor_id")


class Migration(migrations.Migration):

    dependencies = [
        ('shop', '0007_auto_20250920_1947'),
    ]

    operations = [
        migrations.RunPython(fix_orderitem_table, reverse_orderitem_fix),
    ]